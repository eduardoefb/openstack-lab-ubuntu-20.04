---
# tasks file
# https://docs.openstack.org/install-guide/openstack-services.html
# https://docs.openstack.org/nova/train/install/controller-install-rdo.html
# https://docs.openstack.org/train/install/

  - include_vars: "{{ playbook_dir }}/config.yml"
  - include_vars: "{{ playbook_dir }}/passwords.yml"
  - include_vars: "main.yml"

  - name: Create database and user
    shell: |
      mysql -u root -p{{ ROOT_DBPASS }} -e "DROP DATABASE nova_api;"
      mysql -u root -p{{ ROOT_DBPASS }} -e "DROP DATABASE nova;"
      mysql -u root -p{{ ROOT_DBPASS }} -e "DROP DATABASE nova_cell0;"

      mysql -u root -p{{ ROOT_DBPASS }} -e "CREATE DATABASE nova_api;"
      mysql -u root -p{{ ROOT_DBPASS }} -e "CREATE DATABASE nova;"
      mysql -u root -p{{ ROOT_DBPASS }} -e "CREATE DATABASE nova_cell0;"

      mysql -u root -p{{ ROOT_DBPASS }} -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY '{{NOVA_DBPASS}}';"
      mysql -u root -p{{ ROOT_DBPASS }} -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY '{{ NOVA_DBPASS }}';"
      mysql -u root -p{{ ROOT_DBPASS }} -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY '{{ NOVA_DBPASS }}';"
      mysql -u root -p{{ ROOT_DBPASS }} -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY '{{ NOVA_DBPASS }}';"
      mysql -u root -p{{ ROOT_DBPASS }} -e "GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'localhost' IDENTIFIED BY '{{ NOVA_DBPASS }}';"
      mysql -u root -p{{ ROOT_DBPASS }} -e "GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'%' IDENTIFIED BY '{{ NOVA_DBPASS }}';"

  - name: Create user
    shell: |
      source /root/admin-openrc
      openstack user create --domain default --password {{ NOVA_PASS }} nova     
    args: 
      executable: /bin/bash
    
  - name: Add the admin role to the nova user
    shell: |
      source /root/admin-openrc
      openstack role add --project service --user nova admin
    args: 
      executable: /bin/bash

  - name: Create the nova service entity
    shell: |
      source /root/admin-openrc
      openstack service create --name nova --description "OpenStack Compute" compute
      openstack endpoint create --region RegionOne compute public http://{{ openstack.controller.name }}:8774/v2.1
      openstack endpoint create --region RegionOne compute internal http://{{ openstack.controller.name }}:8774/v2.1
      openstack endpoint create --region RegionOne compute admin http://{{ openstack.controller.name }}:8774/v2.1      
    args: 
      executable: /bin/bash

  - name: Installing the packages
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
        - nova-api
        - nova-conductor
        - nova-novncproxy
        - nova-scheduler
        - apparmor-profiles

  - name: Edit the /etc/nova/nova.conf
    template:
      src: nova.conf.j2
      dest: /etc/nova/nova.conf
      owner: root 
      group: nova
      mode: '0640'
  
  - name: Populate the nova-api database
    shell: |
      su -s /bin/sh -c "nova-manage api_db sync" nova
    args:
      warn: no

  - name: Register the cell0 database
    shell: |
      su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova
    args:
      warn: no   

  - name: Create the cell1 cell
    shell: |
      su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova
    args:
      warn: no 

  - name: Populate the nova database
    shell: |
      su -s /bin/sh -c "nova-manage db sync" nova
    args:
      warn: no    

  - name: Verify nova cell0 and cell1 are registered correctly
    shell: |
      su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova
    args:
      warn: no   

  - name: Change ownership of /var/lib/nova to nova
    shell: |
      chown -R nova:nova /var/lib/nova    
    args:
      warn: no

  - name: Start the Compute services and configure them to start when the system boots openstack-nova-api.service
    systemd:
      name: "{{ item }}"
      enabled: yes
      state: restarted
    with_items:
      - nova-api
      - nova-scheduler
      - nova-conductor
      - nova-novncproxy
      








    


